// Copyright 2012-2018 The Rust Project Developers. See the COPYRIGHT
// file at the top-level directory of this distribution and at
// http://rust-lang.org/COPYRIGHT.
//
// Licensed under the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>.
//
// Modified original Rust library [unicode-segmentation]
// (https://unicode-rs.github.io/unicode-segmentation)
//
// to create JavaScript library, [unicode-segmenter]
// (https://github.com/cometkim/unicode-segmenter)

// NOTE: The following code was generated by "scripts/unicode.py", do not edit directly

import { bsearchUnicodeRange } from './core.js';

/**
 * @typedef {0} GC_Any
 * @typedef {1} GC_CR
 * @typedef {2} GC_Control
 * @typedef {3} GC_Extend
 * @typedef {4} GC_Extended_Pictographic
 * @typedef {5} GC_L
 * @typedef {6} GC_LF
 * @typedef {7} GC_LV
 * @typedef {8} GC_LVT
 * @typedef {9} GC_Prepend
 * @typedef {10} GC_Regional_Indicator
 * @typedef {11} GC_SpacingMark
 * @typedef {12} GC_T
 * @typedef {13} GC_V
 * @typedef {14} GC_ZWJ

 * @typedef {(
 *   | GC_Any
 *   | GC_CR
 *   | GC_Control
 *   | GC_Extend
 *   | GC_Extended_Pictographic
 *   | GC_L
 *   | GC_LF
 *   | GC_LV
 *   | GC_LVT
 *   | GC_Prepend
 *   | GC_Regional_Indicator
 *   | GC_SpacingMark
 *   | GC_T
 *   | GC_V
 *   | GC_ZWJ
 * )} GraphemeCategory

 * @typedef {import('./core.js').SearchResult<GraphemeCategory>} GraphemeSearchResult
 * @typedef {import('./core.js').CategorizedUnicodeRange<GraphemeCategory>} GraphemeRange
 */

const grapheme_cat_lookup = [
  0, 5, 9, 9, 9, 9, 9, 10, 10, 10, 11, 11, 16, 21, 26, 29, 32, 37, 41, 53, 65, 75, 86, 97, 106, 116,
  131, 143, 153, 157, 161, 168, 173, 183, 188, 189, 191, 191, 191, 192, 192, 192, 192, 192, 192,
  192, 192, 198, 206, 209, 211, 219, 219, 232, 233, 242, 258, 262, 270, 270, 271, 271, 271, 271,
  271, 279, 280, 282, 284, 284, 284, 286, 290, 290, 291, 291, 295, 297, 298, 313, 317, 317, 317,
  318, 318, 318, 318, 322, 322, 322, 323, 324, 325, 325, 325, 325, 325, 328, 329, 329, 329, 329,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  331, 331, 331, 333, 335, 335, 335, 342, 347, 351, 360, 369, 379, 379, 386, 395, 405, 413, 423,
  431, 441, 450, 459, 469, 477, 487, 495, 505, 514, 523, 533, 541, 551, 559, 569, 578, 587, 597,
  605, 615, 623, 633, 642, 651, 661, 669, 679, 687, 697, 706, 715, 725, 733, 743, 751, 761, 770,
  779, 789, 797, 807, 815, 825, 834, 843, 853, 861, 871, 879, 889, 898, 907, 917, 925, 935, 943,
  953, 962, 971, 981, 989, 999, 1007, 1017, 1026, 1035, 1045, 1053, 1063, 1071, 1081, 1090, 1099,
  1109, 1117, 1127, 1135, 1145, 1154, 1163, 1173, 1181, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
  1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
  1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
  1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
  1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186,
  1187, 1187, 1187, 1187, 1187, 1187, 1189, 1190, 1190, 1192, 1192, 1192, 1192, 1193, 1193, 1194,
  1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1200, 1201,
  1201, 1201, 1201, 1201, 1202, 1202, 1202, 1204, 1205, 1206, 1212, 1221, 1227, 1236, 1244, 1247,
  1260, 1260, 1267, 1278, 1278, 1286, 1292, 1299, 1303, 1303, 1307, 1307, 1318, 1324, 1333, 1337,
  1337, 1337, 1342, 1349, 1355, 1361, 1361, 1363, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372,
  1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372,
  1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372, 1372,
  1372, 1372, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375,
  1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375,
  1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375,
  1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375,
  1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375,
  1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375,
  1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1375, 1376,
  1377, 1377, 1377, 1377, 1377, 1377, 1377, 1377, 1378, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382, 1382,
  1382, 1382, 1382, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384,
  1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384,
  1384, 1384, 1384, 1384, 1384, 1384, 1384, 1384, 1386, 1386, 1386, 1386, 1392, 1395, 1396, 1396,
  1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396, 1396, 1399, 1402,
  1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1402, 1407, 1408, 1409, 1409, 1409, 1411,
  1411, 1411, 1411, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1412, 1413, 1414, 1414, 1414, 1414,
  1414, 1414, 1414, 1414, 1414, 1414, 1414, 1414, 1414, 1414, 1414, 1415, 1419, 1423, 1428, 1428,
  1428, 1430, 1430, 1430, 1431, 1431, 1432, 1433, 1434, 1435, 1438, 1440, 1442, 1442, 1442, 1443,
  1443, 1443, 1443, 1443, 1443, 1443, 1443, 1443, 1443,
];

/**
 * @type {GraphemeRange[]}
 */
const grapheme_cat_table = [
  [0x0, 0x9, 2], [0xa, 0xa, 6], [0xb, 0xc, 2], [0xd, 0xd, 1], [0xe, 0x1f, 2], [0x7f, 0x9f, 2],
  [0xa9, 0xa9, 4], [0xad, 0xad, 2], [0xae, 0xae, 4], [0x300, 0x36f, 3], [0x483, 0x489, 3], [0x591,
  0x5bd, 3], [0x5bf, 0x5bf, 3], [0x5c1, 0x5c2, 3], [0x5c4, 0x5c5, 3], [0x5c7, 0x5c7, 3], [0x600,
  0x605, 9], [0x610, 0x61a, 3], [0x61c, 0x61c, 2], [0x64b, 0x65f, 3], [0x670, 0x670, 3], [0x6d6,
  0x6dc, 3], [0x6dd, 0x6dd, 9], [0x6df, 0x6e4, 3], [0x6e7, 0x6e8, 3], [0x6ea, 0x6ed, 3], [0x70f,
  0x70f, 9], [0x711, 0x711, 3], [0x730, 0x74a, 3], [0x7a6, 0x7b0, 3], [0x7eb, 0x7f3, 3], [0x7fd,
  0x7fd, 3], [0x816, 0x819, 3], [0x81b, 0x823, 3], [0x825, 0x827, 3], [0x829, 0x82d, 3], [0x859,
  0x85b, 3], [0x890, 0x891, 9], [0x898, 0x89f, 3], [0x8ca, 0x8e1, 3], [0x8e2, 0x8e2, 9], [0x8e3,
  0x902, 3], [0x903, 0x903, 11], [0x93a, 0x93a, 3], [0x93b, 0x93b, 11], [0x93c, 0x93c, 3], [0x93e,
  0x940, 11], [0x941, 0x948, 3], [0x949, 0x94c, 11], [0x94d, 0x94d, 3], [0x94e, 0x94f, 11], [0x951,
  0x957, 3], [0x962, 0x963, 3], [0x981, 0x981, 3], [0x982, 0x983, 11], [0x9bc, 0x9bc, 3], [0x9be,
  0x9be, 3], [0x9bf, 0x9c0, 11], [0x9c1, 0x9c4, 3], [0x9c7, 0x9c8, 11], [0x9cb, 0x9cc, 11], [0x9cd,
  0x9cd, 3], [0x9d7, 0x9d7, 3], [0x9e2, 0x9e3, 3], [0x9fe, 0x9fe, 3], [0xa01, 0xa02, 3], [0xa03,
  0xa03, 11], [0xa3c, 0xa3c, 3], [0xa3e, 0xa40, 11], [0xa41, 0xa42, 3], [0xa47, 0xa48, 3], [0xa4b,
  0xa4d, 3], [0xa51, 0xa51, 3], [0xa70, 0xa71, 3], [0xa75, 0xa75, 3], [0xa81, 0xa82, 3], [0xa83,
  0xa83, 11], [0xabc, 0xabc, 3], [0xabe, 0xac0, 11], [0xac1, 0xac5, 3], [0xac7, 0xac8, 3], [0xac9,
  0xac9, 11], [0xacb, 0xacc, 11], [0xacd, 0xacd, 3], [0xae2, 0xae3, 3], [0xafa, 0xaff, 3], [0xb01,
  0xb01, 3], [0xb02, 0xb03, 11], [0xb3c, 0xb3c, 3], [0xb3e, 0xb3f, 3], [0xb40, 0xb40, 11], [0xb41,
  0xb44, 3], [0xb47, 0xb48, 11], [0xb4b, 0xb4c, 11], [0xb4d, 0xb4d, 3], [0xb55, 0xb57, 3], [0xb62,
  0xb63, 3], [0xb82, 0xb82, 3], [0xbbe, 0xbbe, 3], [0xbbf, 0xbbf, 11], [0xbc0, 0xbc0, 3], [0xbc1,
  0xbc2, 11], [0xbc6, 0xbc8, 11], [0xbca, 0xbcc, 11], [0xbcd, 0xbcd, 3], [0xbd7, 0xbd7, 3], [0xc00,
  0xc00, 3], [0xc01, 0xc03, 11], [0xc04, 0xc04, 3], [0xc3c, 0xc3c, 3], [0xc3e, 0xc40, 3], [0xc41,
  0xc44, 11], [0xc46, 0xc48, 3], [0xc4a, 0xc4d, 3], [0xc55, 0xc56, 3], [0xc62, 0xc63, 3], [0xc81,
  0xc81, 3], [0xc82, 0xc83, 11], [0xcbc, 0xcbc, 3], [0xcbe, 0xcbe, 11], [0xcbf, 0xcbf, 3], [0xcc0,
  0xcc1, 11], [0xcc2, 0xcc2, 3], [0xcc3, 0xcc4, 11], [0xcc6, 0xcc6, 3], [0xcc7, 0xcc8, 11], [0xcca,
  0xccb, 11], [0xccc, 0xccd, 3], [0xcd5, 0xcd6, 3], [0xce2, 0xce3, 3], [0xcf3, 0xcf3, 11], [0xd00,
  0xd01, 3], [0xd02, 0xd03, 11], [0xd3b, 0xd3c, 3], [0xd3e, 0xd3e, 3], [0xd3f, 0xd40, 11], [0xd41,
  0xd44, 3], [0xd46, 0xd48, 11], [0xd4a, 0xd4c, 11], [0xd4d, 0xd4d, 3], [0xd4e, 0xd4e, 9], [0xd57,
  0xd57, 3], [0xd62, 0xd63, 3], [0xd81, 0xd81, 3], [0xd82, 0xd83, 11], [0xdca, 0xdca, 3], [0xdcf,
  0xdcf, 3], [0xdd0, 0xdd1, 11], [0xdd2, 0xdd4, 3], [0xdd6, 0xdd6, 3], [0xdd8, 0xdde, 11], [0xddf,
  0xddf, 3], [0xdf2, 0xdf3, 11], [0xe31, 0xe31, 3], [0xe33, 0xe33, 11], [0xe34, 0xe3a, 3], [0xe47,
  0xe4e, 3], [0xeb1, 0xeb1, 3], [0xeb3, 0xeb3, 11], [0xeb4, 0xebc, 3], [0xec8, 0xece, 3], [0xf18,
  0xf19, 3], [0xf35, 0xf35, 3], [0xf37, 0xf37, 3], [0xf39, 0xf39, 3], [0xf3e, 0xf3f, 11], [0xf71,
  0xf7e, 3], [0xf7f, 0xf7f, 11], [0xf80, 0xf84, 3], [0xf86, 0xf87, 3], [0xf8d, 0xf97, 3], [0xf99,
  0xfbc, 3], [0xfc6, 0xfc6, 3], [0x102d, 0x1030, 3], [0x1031, 0x1031, 11], [0x1032, 0x1037, 3],
  [0x1039, 0x103a, 3], [0x103b, 0x103c, 11], [0x103d, 0x103e, 3], [0x1056, 0x1057, 11], [0x1058,
  0x1059, 3], [0x105e, 0x1060, 3], [0x1071, 0x1074, 3], [0x1082, 0x1082, 3], [0x1084, 0x1084, 11],
  [0x1085, 0x1086, 3], [0x108d, 0x108d, 3], [0x109d, 0x109d, 3], [0x1100, 0x115f, 5], [0x1160,
  0x11a7, 13], [0x11a8, 0x11ff, 12], [0x135d, 0x135f, 3], [0x1712, 0x1714, 3], [0x1715, 0x1715, 11],
  [0x1732, 0x1733, 3], [0x1734, 0x1734, 11], [0x1752, 0x1753, 3], [0x1772, 0x1773, 3], [0x17b4,
  0x17b5, 3], [0x17b6, 0x17b6, 11], [0x17b7, 0x17bd, 3], [0x17be, 0x17c5, 11], [0x17c6, 0x17c6, 3],
  [0x17c7, 0x17c8, 11], [0x17c9, 0x17d3, 3], [0x17dd, 0x17dd, 3], [0x180b, 0x180d, 3], [0x180e,
  0x180e, 2], [0x180f, 0x180f, 3], [0x1885, 0x1886, 3], [0x18a9, 0x18a9, 3], [0x1920, 0x1922, 3],
  [0x1923, 0x1926, 11], [0x1927, 0x1928, 3], [0x1929, 0x192b, 11], [0x1930, 0x1931, 11], [0x1932,
  0x1932, 3], [0x1933, 0x1938, 11], [0x1939, 0x193b, 3], [0x1a17, 0x1a18, 3], [0x1a19, 0x1a1a, 11],
  [0x1a1b, 0x1a1b, 3], [0x1a55, 0x1a55, 11], [0x1a56, 0x1a56, 3], [0x1a57, 0x1a57, 11], [0x1a58,
  0x1a5e, 3], [0x1a60, 0x1a60, 3], [0x1a62, 0x1a62, 3], [0x1a65, 0x1a6c, 3], [0x1a6d, 0x1a72, 11],
  [0x1a73, 0x1a7c, 3], [0x1a7f, 0x1a7f, 3], [0x1ab0, 0x1ace, 3], [0x1b00, 0x1b03, 3], [0x1b04,
  0x1b04, 11], [0x1b34, 0x1b3a, 3], [0x1b3b, 0x1b3b, 11], [0x1b3c, 0x1b3c, 3], [0x1b3d, 0x1b41, 11],
  [0x1b42, 0x1b42, 3], [0x1b43, 0x1b44, 11], [0x1b6b, 0x1b73, 3], [0x1b80, 0x1b81, 3], [0x1b82,
  0x1b82, 11], [0x1ba1, 0x1ba1, 11], [0x1ba2, 0x1ba5, 3], [0x1ba6, 0x1ba7, 11], [0x1ba8, 0x1ba9, 3],
  [0x1baa, 0x1baa, 11], [0x1bab, 0x1bad, 3], [0x1be6, 0x1be6, 3], [0x1be7, 0x1be7, 11], [0x1be8,
  0x1be9, 3], [0x1bea, 0x1bec, 11], [0x1bed, 0x1bed, 3], [0x1bee, 0x1bee, 11], [0x1bef, 0x1bf1, 3],
  [0x1bf2, 0x1bf3, 11], [0x1c24, 0x1c2b, 11], [0x1c2c, 0x1c33, 3], [0x1c34, 0x1c35, 11], [0x1c36,
  0x1c37, 3], [0x1cd0, 0x1cd2, 3], [0x1cd4, 0x1ce0, 3], [0x1ce1, 0x1ce1, 11], [0x1ce2, 0x1ce8, 3],
  [0x1ced, 0x1ced, 3], [0x1cf4, 0x1cf4, 3], [0x1cf7, 0x1cf7, 11], [0x1cf8, 0x1cf9, 3], [0x1dc0,
  0x1dff, 3], [0x200b, 0x200b, 2], [0x200c, 0x200c, 3], [0x200d, 0x200d, 14], [0x200e, 0x200f, 2],
  [0x2028, 0x202e, 2], [0x203c, 0x203c, 4], [0x2049, 0x2049, 4], [0x2060, 0x206f, 2], [0x20d0,
  0x20f0, 3], [0x2122, 0x2122, 4], [0x2139, 0x2139, 4], [0x2194, 0x2199, 4], [0x21a9, 0x21aa, 4],
  [0x231a, 0x231b, 4], [0x2328, 0x2328, 4], [0x2388, 0x2388, 4], [0x23cf, 0x23cf, 4], [0x23e9,
  0x23f3, 4], [0x23f8, 0x23fa, 4], [0x24c2, 0x24c2, 4], [0x25aa, 0x25ab, 4], [0x25b6, 0x25b6, 4],
  [0x25c0, 0x25c0, 4], [0x25fb, 0x25fe, 4], [0x2600, 0x2605, 4], [0x2607, 0x2612, 4], [0x2614,
  0x2685, 4], [0x2690, 0x2705, 4], [0x2708, 0x2712, 4], [0x2714, 0x2714, 4], [0x2716, 0x2716, 4],
  [0x271d, 0x271d, 4], [0x2721, 0x2721, 4], [0x2728, 0x2728, 4], [0x2733, 0x2734, 4], [0x2744,
  0x2744, 4], [0x2747, 0x2747, 4], [0x274c, 0x274c, 4], [0x274e, 0x274e, 4], [0x2753, 0x2755, 4],
  [0x2757, 0x2757, 4], [0x2763, 0x2767, 4], [0x2795, 0x2797, 4], [0x27a1, 0x27a1, 4], [0x27b0,
  0x27b0, 4], [0x27bf, 0x27bf, 4], [0x2934, 0x2935, 4], [0x2b05, 0x2b07, 4], [0x2b1b, 0x2b1c, 4],
  [0x2b50, 0x2b50, 4], [0x2b55, 0x2b55, 4], [0x2cef, 0x2cf1, 3], [0x2d7f, 0x2d7f, 3], [0x2de0,
  0x2dff, 3], [0x302a, 0x302f, 3], [0x3030, 0x3030, 4], [0x303d, 0x303d, 4], [0x3099, 0x309a, 3],
  [0x3297, 0x3297, 4], [0x3299, 0x3299, 4], [0xa66f, 0xa672, 3], [0xa674, 0xa67d, 3], [0xa69e,
  0xa69f, 3], [0xa6f0, 0xa6f1, 3], [0xa802, 0xa802, 3], [0xa806, 0xa806, 3], [0xa80b, 0xa80b, 3],
  [0xa823, 0xa824, 11], [0xa825, 0xa826, 3], [0xa827, 0xa827, 11], [0xa82c, 0xa82c, 3], [0xa880,
  0xa881, 11], [0xa8b4, 0xa8c3, 11], [0xa8c4, 0xa8c5, 3], [0xa8e0, 0xa8f1, 3], [0xa8ff, 0xa8ff, 3],
  [0xa926, 0xa92d, 3], [0xa947, 0xa951, 3], [0xa952, 0xa953, 11], [0xa960, 0xa97c, 5], [0xa980,
  0xa982, 3], [0xa983, 0xa983, 11], [0xa9b3, 0xa9b3, 3], [0xa9b4, 0xa9b5, 11], [0xa9b6, 0xa9b9, 3],
  [0xa9ba, 0xa9bb, 11], [0xa9bc, 0xa9bd, 3], [0xa9be, 0xa9c0, 11], [0xa9e5, 0xa9e5, 3], [0xaa29,
  0xaa2e, 3], [0xaa2f, 0xaa30, 11], [0xaa31, 0xaa32, 3], [0xaa33, 0xaa34, 11], [0xaa35, 0xaa36, 3],
  [0xaa43, 0xaa43, 3], [0xaa4c, 0xaa4c, 3], [0xaa4d, 0xaa4d, 11], [0xaa7c, 0xaa7c, 3], [0xaab0,
  0xaab0, 3], [0xaab2, 0xaab4, 3], [0xaab7, 0xaab8, 3], [0xaabe, 0xaabf, 3], [0xaac1, 0xaac1, 3],
  [0xaaeb, 0xaaeb, 11], [0xaaec, 0xaaed, 3], [0xaaee, 0xaaef, 11], [0xaaf5, 0xaaf5, 11], [0xaaf6,
  0xaaf6, 3], [0xabe3, 0xabe4, 11], [0xabe5, 0xabe5, 3], [0xabe6, 0xabe7, 11], [0xabe8, 0xabe8, 3],
  [0xabe9, 0xabea, 11], [0xabec, 0xabec, 11], [0xabed, 0xabed, 3], [0xac00, 0xac00, 7], [0xac01,
  0xac1b, 8], [0xac1c, 0xac1c, 7], [0xac1d, 0xac37, 8], [0xac38, 0xac38, 7], [0xac39, 0xac53, 8],
  [0xac54, 0xac54, 7], [0xac55, 0xac6f, 8], [0xac70, 0xac70, 7], [0xac71, 0xac8b, 8], [0xac8c,
  0xac8c, 7], [0xac8d, 0xaca7, 8], [0xaca8, 0xaca8, 7], [0xaca9, 0xacc3, 8], [0xacc4, 0xacc4, 7],
  [0xacc5, 0xacdf, 8], [0xace0, 0xace0, 7], [0xace1, 0xacfb, 8], [0xacfc, 0xacfc, 7], [0xacfd,
  0xad17, 8], [0xad18, 0xad18, 7], [0xad19, 0xad33, 8], [0xad34, 0xad34, 7], [0xad35, 0xad4f, 8],
  [0xad50, 0xad50, 7], [0xad51, 0xad6b, 8], [0xad6c, 0xad6c, 7], [0xad6d, 0xad87, 8], [0xad88,
  0xad88, 7], [0xad89, 0xada3, 8], [0xada4, 0xada4, 7], [0xada5, 0xadbf, 8], [0xadc0, 0xadc0, 7],
  [0xadc1, 0xaddb, 8], [0xaddc, 0xaddc, 7], [0xaddd, 0xadf7, 8], [0xadf8, 0xadf8, 7], [0xadf9,
  0xae13, 8], [0xae14, 0xae14, 7], [0xae15, 0xae2f, 8], [0xae30, 0xae30, 7], [0xae31, 0xae4b, 8],
  [0xae4c, 0xae4c, 7], [0xae4d, 0xae67, 8], [0xae68, 0xae68, 7], [0xae69, 0xae83, 8], [0xae84,
  0xae84, 7], [0xae85, 0xae9f, 8], [0xaea0, 0xaea0, 7], [0xaea1, 0xaebb, 8], [0xaebc, 0xaebc, 7],
  [0xaebd, 0xaed7, 8], [0xaed8, 0xaed8, 7], [0xaed9, 0xaef3, 8], [0xaef4, 0xaef4, 7], [0xaef5,
  0xaf0f, 8], [0xaf10, 0xaf10, 7], [0xaf11, 0xaf2b, 8], [0xaf2c, 0xaf2c, 7], [0xaf2d, 0xaf47, 8],
  [0xaf48, 0xaf48, 7], [0xaf49, 0xaf63, 8], [0xaf64, 0xaf64, 7], [0xaf65, 0xaf7f, 8], [0xaf80,
  0xaf80, 7], [0xaf81, 0xaf9b, 8], [0xaf9c, 0xaf9c, 7], [0xaf9d, 0xafb7, 8], [0xafb8, 0xafb8, 7],
  [0xafb9, 0xafd3, 8], [0xafd4, 0xafd4, 7], [0xafd5, 0xafef, 8], [0xaff0, 0xaff0, 7], [0xaff1,
  0xb00b, 8], [0xb00c, 0xb00c, 7], [0xb00d, 0xb027, 8], [0xb028, 0xb028, 7], [0xb029, 0xb043, 8],
  [0xb044, 0xb044, 7], [0xb045, 0xb05f, 8], [0xb060, 0xb060, 7], [0xb061, 0xb07b, 8], [0xb07c,
  0xb07c, 7], [0xb07d, 0xb097, 8], [0xb098, 0xb098, 7], [0xb099, 0xb0b3, 8], [0xb0b4, 0xb0b4, 7],
  [0xb0b5, 0xb0cf, 8], [0xb0d0, 0xb0d0, 7], [0xb0d1, 0xb0eb, 8], [0xb0ec, 0xb0ec, 7], [0xb0ed,
  0xb107, 8], [0xb108, 0xb108, 7], [0xb109, 0xb123, 8], [0xb124, 0xb124, 7], [0xb125, 0xb13f, 8],
  [0xb140, 0xb140, 7], [0xb141, 0xb15b, 8], [0xb15c, 0xb15c, 7], [0xb15d, 0xb177, 8], [0xb178,
  0xb178, 7], [0xb179, 0xb193, 8], [0xb194, 0xb194, 7], [0xb195, 0xb1af, 8], [0xb1b0, 0xb1b0, 7],
  [0xb1b1, 0xb1cb, 8], [0xb1cc, 0xb1cc, 7], [0xb1cd, 0xb1e7, 8], [0xb1e8, 0xb1e8, 7], [0xb1e9,
  0xb203, 8], [0xb204, 0xb204, 7], [0xb205, 0xb21f, 8], [0xb220, 0xb220, 7], [0xb221, 0xb23b, 8],
  [0xb23c, 0xb23c, 7], [0xb23d, 0xb257, 8], [0xb258, 0xb258, 7], [0xb259, 0xb273, 8], [0xb274,
  0xb274, 7], [0xb275, 0xb28f, 8], [0xb290, 0xb290, 7], [0xb291, 0xb2ab, 8], [0xb2ac, 0xb2ac, 7],
  [0xb2ad, 0xb2c7, 8], [0xb2c8, 0xb2c8, 7], [0xb2c9, 0xb2e3, 8], [0xb2e4, 0xb2e4, 7], [0xb2e5,
  0xb2ff, 8], [0xb300, 0xb300, 7], [0xb301, 0xb31b, 8], [0xb31c, 0xb31c, 7], [0xb31d, 0xb337, 8],
  [0xb338, 0xb338, 7], [0xb339, 0xb353, 8], [0xb354, 0xb354, 7], [0xb355, 0xb36f, 8], [0xb370,
  0xb370, 7], [0xb371, 0xb38b, 8], [0xb38c, 0xb38c, 7], [0xb38d, 0xb3a7, 8], [0xb3a8, 0xb3a8, 7],
  [0xb3a9, 0xb3c3, 8], [0xb3c4, 0xb3c4, 7], [0xb3c5, 0xb3df, 8], [0xb3e0, 0xb3e0, 7], [0xb3e1,
  0xb3fb, 8], [0xb3fc, 0xb3fc, 7], [0xb3fd, 0xb417, 8], [0xb418, 0xb418, 7], [0xb419, 0xb433, 8],
  [0xb434, 0xb434, 7], [0xb435, 0xb44f, 8], [0xb450, 0xb450, 7], [0xb451, 0xb46b, 8], [0xb46c,
  0xb46c, 7], [0xb46d, 0xb487, 8], [0xb488, 0xb488, 7], [0xb489, 0xb4a3, 8], [0xb4a4, 0xb4a4, 7],
  [0xb4a5, 0xb4bf, 8], [0xb4c0, 0xb4c0, 7], [0xb4c1, 0xb4db, 8], [0xb4dc, 0xb4dc, 7], [0xb4dd,
  0xb4f7, 8], [0xb4f8, 0xb4f8, 7], [0xb4f9, 0xb513, 8], [0xb514, 0xb514, 7], [0xb515, 0xb52f, 8],
  [0xb530, 0xb530, 7], [0xb531, 0xb54b, 8], [0xb54c, 0xb54c, 7], [0xb54d, 0xb567, 8], [0xb568,
  0xb568, 7], [0xb569, 0xb583, 8], [0xb584, 0xb584, 7], [0xb585, 0xb59f, 8], [0xb5a0, 0xb5a0, 7],
  [0xb5a1, 0xb5bb, 8], [0xb5bc, 0xb5bc, 7], [0xb5bd, 0xb5d7, 8], [0xb5d8, 0xb5d8, 7], [0xb5d9,
  0xb5f3, 8], [0xb5f4, 0xb5f4, 7], [0xb5f5, 0xb60f, 8], [0xb610, 0xb610, 7], [0xb611, 0xb62b, 8],
  [0xb62c, 0xb62c, 7], [0xb62d, 0xb647, 8], [0xb648, 0xb648, 7], [0xb649, 0xb663, 8], [0xb664,
  0xb664, 7], [0xb665, 0xb67f, 8], [0xb680, 0xb680, 7], [0xb681, 0xb69b, 8], [0xb69c, 0xb69c, 7],
  [0xb69d, 0xb6b7, 8], [0xb6b8, 0xb6b8, 7], [0xb6b9, 0xb6d3, 8], [0xb6d4, 0xb6d4, 7], [0xb6d5,
  0xb6ef, 8], [0xb6f0, 0xb6f0, 7], [0xb6f1, 0xb70b, 8], [0xb70c, 0xb70c, 7], [0xb70d, 0xb727, 8],
  [0xb728, 0xb728, 7], [0xb729, 0xb743, 8], [0xb744, 0xb744, 7], [0xb745, 0xb75f, 8], [0xb760,
  0xb760, 7], [0xb761, 0xb77b, 8], [0xb77c, 0xb77c, 7], [0xb77d, 0xb797, 8], [0xb798, 0xb798, 7],
  [0xb799, 0xb7b3, 8], [0xb7b4, 0xb7b4, 7], [0xb7b5, 0xb7cf, 8], [0xb7d0, 0xb7d0, 7], [0xb7d1,
  0xb7eb, 8], [0xb7ec, 0xb7ec, 7], [0xb7ed, 0xb807, 8], [0xb808, 0xb808, 7], [0xb809, 0xb823, 8],
  [0xb824, 0xb824, 7], [0xb825, 0xb83f, 8], [0xb840, 0xb840, 7], [0xb841, 0xb85b, 8], [0xb85c,
  0xb85c, 7], [0xb85d, 0xb877, 8], [0xb878, 0xb878, 7], [0xb879, 0xb893, 8], [0xb894, 0xb894, 7],
  [0xb895, 0xb8af, 8], [0xb8b0, 0xb8b0, 7], [0xb8b1, 0xb8cb, 8], [0xb8cc, 0xb8cc, 7], [0xb8cd,
  0xb8e7, 8], [0xb8e8, 0xb8e8, 7], [0xb8e9, 0xb903, 8], [0xb904, 0xb904, 7], [0xb905, 0xb91f, 8],
  [0xb920, 0xb920, 7], [0xb921, 0xb93b, 8], [0xb93c, 0xb93c, 7], [0xb93d, 0xb957, 8], [0xb958,
  0xb958, 7], [0xb959, 0xb973, 8], [0xb974, 0xb974, 7], [0xb975, 0xb98f, 8], [0xb990, 0xb990, 7],
  [0xb991, 0xb9ab, 8], [0xb9ac, 0xb9ac, 7], [0xb9ad, 0xb9c7, 8], [0xb9c8, 0xb9c8, 7], [0xb9c9,
  0xb9e3, 8], [0xb9e4, 0xb9e4, 7], [0xb9e5, 0xb9ff, 8], [0xba00, 0xba00, 7], [0xba01, 0xba1b, 8],
  [0xba1c, 0xba1c, 7], [0xba1d, 0xba37, 8], [0xba38, 0xba38, 7], [0xba39, 0xba53, 8], [0xba54,
  0xba54, 7], [0xba55, 0xba6f, 8], [0xba70, 0xba70, 7], [0xba71, 0xba8b, 8], [0xba8c, 0xba8c, 7],
  [0xba8d, 0xbaa7, 8], [0xbaa8, 0xbaa8, 7], [0xbaa9, 0xbac3, 8], [0xbac4, 0xbac4, 7], [0xbac5,
  0xbadf, 8], [0xbae0, 0xbae0, 7], [0xbae1, 0xbafb, 8], [0xbafc, 0xbafc, 7], [0xbafd, 0xbb17, 8],
  [0xbb18, 0xbb18, 7], [0xbb19, 0xbb33, 8], [0xbb34, 0xbb34, 7], [0xbb35, 0xbb4f, 8], [0xbb50,
  0xbb50, 7], [0xbb51, 0xbb6b, 8], [0xbb6c, 0xbb6c, 7], [0xbb6d, 0xbb87, 8], [0xbb88, 0xbb88, 7],
  [0xbb89, 0xbba3, 8], [0xbba4, 0xbba4, 7], [0xbba5, 0xbbbf, 8], [0xbbc0, 0xbbc0, 7], [0xbbc1,
  0xbbdb, 8], [0xbbdc, 0xbbdc, 7], [0xbbdd, 0xbbf7, 8], [0xbbf8, 0xbbf8, 7], [0xbbf9, 0xbc13, 8],
  [0xbc14, 0xbc14, 7], [0xbc15, 0xbc2f, 8], [0xbc30, 0xbc30, 7], [0xbc31, 0xbc4b, 8], [0xbc4c,
  0xbc4c, 7], [0xbc4d, 0xbc67, 8], [0xbc68, 0xbc68, 7], [0xbc69, 0xbc83, 8], [0xbc84, 0xbc84, 7],
  [0xbc85, 0xbc9f, 8], [0xbca0, 0xbca0, 7], [0xbca1, 0xbcbb, 8], [0xbcbc, 0xbcbc, 7], [0xbcbd,
  0xbcd7, 8], [0xbcd8, 0xbcd8, 7], [0xbcd9, 0xbcf3, 8], [0xbcf4, 0xbcf4, 7], [0xbcf5, 0xbd0f, 8],
  [0xbd10, 0xbd10, 7], [0xbd11, 0xbd2b, 8], [0xbd2c, 0xbd2c, 7], [0xbd2d, 0xbd47, 8], [0xbd48,
  0xbd48, 7], [0xbd49, 0xbd63, 8], [0xbd64, 0xbd64, 7], [0xbd65, 0xbd7f, 8], [0xbd80, 0xbd80, 7],
  [0xbd81, 0xbd9b, 8], [0xbd9c, 0xbd9c, 7], [0xbd9d, 0xbdb7, 8], [0xbdb8, 0xbdb8, 7], [0xbdb9,
  0xbdd3, 8], [0xbdd4, 0xbdd4, 7], [0xbdd5, 0xbdef, 8], [0xbdf0, 0xbdf0, 7], [0xbdf1, 0xbe0b, 8],
  [0xbe0c, 0xbe0c, 7], [0xbe0d, 0xbe27, 8], [0xbe28, 0xbe28, 7], [0xbe29, 0xbe43, 8], [0xbe44,
  0xbe44, 7], [0xbe45, 0xbe5f, 8], [0xbe60, 0xbe60, 7], [0xbe61, 0xbe7b, 8], [0xbe7c, 0xbe7c, 7],
  [0xbe7d, 0xbe97, 8], [0xbe98, 0xbe98, 7], [0xbe99, 0xbeb3, 8], [0xbeb4, 0xbeb4, 7], [0xbeb5,
  0xbecf, 8], [0xbed0, 0xbed0, 7], [0xbed1, 0xbeeb, 8], [0xbeec, 0xbeec, 7], [0xbeed, 0xbf07, 8],
  [0xbf08, 0xbf08, 7], [0xbf09, 0xbf23, 8], [0xbf24, 0xbf24, 7], [0xbf25, 0xbf3f, 8], [0xbf40,
  0xbf40, 7], [0xbf41, 0xbf5b, 8], [0xbf5c, 0xbf5c, 7], [0xbf5d, 0xbf77, 8], [0xbf78, 0xbf78, 7],
  [0xbf79, 0xbf93, 8], [0xbf94, 0xbf94, 7], [0xbf95, 0xbfaf, 8], [0xbfb0, 0xbfb0, 7], [0xbfb1,
  0xbfcb, 8], [0xbfcc, 0xbfcc, 7], [0xbfcd, 0xbfe7, 8], [0xbfe8, 0xbfe8, 7], [0xbfe9, 0xc003, 8],
  [0xc004, 0xc004, 7], [0xc005, 0xc01f, 8], [0xc020, 0xc020, 7], [0xc021, 0xc03b, 8], [0xc03c,
  0xc03c, 7], [0xc03d, 0xc057, 8], [0xc058, 0xc058, 7], [0xc059, 0xc073, 8], [0xc074, 0xc074, 7],
  [0xc075, 0xc08f, 8], [0xc090, 0xc090, 7], [0xc091, 0xc0ab, 8], [0xc0ac, 0xc0ac, 7], [0xc0ad,
  0xc0c7, 8], [0xc0c8, 0xc0c8, 7], [0xc0c9, 0xc0e3, 8], [0xc0e4, 0xc0e4, 7], [0xc0e5, 0xc0ff, 8],
  [0xc100, 0xc100, 7], [0xc101, 0xc11b, 8], [0xc11c, 0xc11c, 7], [0xc11d, 0xc137, 8], [0xc138,
  0xc138, 7], [0xc139, 0xc153, 8], [0xc154, 0xc154, 7], [0xc155, 0xc16f, 8], [0xc170, 0xc170, 7],
  [0xc171, 0xc18b, 8], [0xc18c, 0xc18c, 7], [0xc18d, 0xc1a7, 8], [0xc1a8, 0xc1a8, 7], [0xc1a9,
  0xc1c3, 8], [0xc1c4, 0xc1c4, 7], [0xc1c5, 0xc1df, 8], [0xc1e0, 0xc1e0, 7], [0xc1e1, 0xc1fb, 8],
  [0xc1fc, 0xc1fc, 7], [0xc1fd, 0xc217, 8], [0xc218, 0xc218, 7], [0xc219, 0xc233, 8], [0xc234,
  0xc234, 7], [0xc235, 0xc24f, 8], [0xc250, 0xc250, 7], [0xc251, 0xc26b, 8], [0xc26c, 0xc26c, 7],
  [0xc26d, 0xc287, 8], [0xc288, 0xc288, 7], [0xc289, 0xc2a3, 8], [0xc2a4, 0xc2a4, 7], [0xc2a5,
  0xc2bf, 8], [0xc2c0, 0xc2c0, 7], [0xc2c1, 0xc2db, 8], [0xc2dc, 0xc2dc, 7], [0xc2dd, 0xc2f7, 8],
  [0xc2f8, 0xc2f8, 7], [0xc2f9, 0xc313, 8], [0xc314, 0xc314, 7], [0xc315, 0xc32f, 8], [0xc330,
  0xc330, 7], [0xc331, 0xc34b, 8], [0xc34c, 0xc34c, 7], [0xc34d, 0xc367, 8], [0xc368, 0xc368, 7],
  [0xc369, 0xc383, 8], [0xc384, 0xc384, 7], [0xc385, 0xc39f, 8], [0xc3a0, 0xc3a0, 7], [0xc3a1,
  0xc3bb, 8], [0xc3bc, 0xc3bc, 7], [0xc3bd, 0xc3d7, 8], [0xc3d8, 0xc3d8, 7], [0xc3d9, 0xc3f3, 8],
  [0xc3f4, 0xc3f4, 7], [0xc3f5, 0xc40f, 8], [0xc410, 0xc410, 7], [0xc411, 0xc42b, 8], [0xc42c,
  0xc42c, 7], [0xc42d, 0xc447, 8], [0xc448, 0xc448, 7], [0xc449, 0xc463, 8], [0xc464, 0xc464, 7],
  [0xc465, 0xc47f, 8], [0xc480, 0xc480, 7], [0xc481, 0xc49b, 8], [0xc49c, 0xc49c, 7], [0xc49d,
  0xc4b7, 8], [0xc4b8, 0xc4b8, 7], [0xc4b9, 0xc4d3, 8], [0xc4d4, 0xc4d4, 7], [0xc4d5, 0xc4ef, 8],
  [0xc4f0, 0xc4f0, 7], [0xc4f1, 0xc50b, 8], [0xc50c, 0xc50c, 7], [0xc50d, 0xc527, 8], [0xc528,
  0xc528, 7], [0xc529, 0xc543, 8], [0xc544, 0xc544, 7], [0xc545, 0xc55f, 8], [0xc560, 0xc560, 7],
  [0xc561, 0xc57b, 8], [0xc57c, 0xc57c, 7], [0xc57d, 0xc597, 8], [0xc598, 0xc598, 7], [0xc599,
  0xc5b3, 8], [0xc5b4, 0xc5b4, 7], [0xc5b5, 0xc5cf, 8], [0xc5d0, 0xc5d0, 7], [0xc5d1, 0xc5eb, 8],
  [0xc5ec, 0xc5ec, 7], [0xc5ed, 0xc607, 8], [0xc608, 0xc608, 7], [0xc609, 0xc623, 8], [0xc624,
  0xc624, 7], [0xc625, 0xc63f, 8], [0xc640, 0xc640, 7], [0xc641, 0xc65b, 8], [0xc65c, 0xc65c, 7],
  [0xc65d, 0xc677, 8], [0xc678, 0xc678, 7], [0xc679, 0xc693, 8], [0xc694, 0xc694, 7], [0xc695,
  0xc6af, 8], [0xc6b0, 0xc6b0, 7], [0xc6b1, 0xc6cb, 8], [0xc6cc, 0xc6cc, 7], [0xc6cd, 0xc6e7, 8],
  [0xc6e8, 0xc6e8, 7], [0xc6e9, 0xc703, 8], [0xc704, 0xc704, 7], [0xc705, 0xc71f, 8], [0xc720,
  0xc720, 7], [0xc721, 0xc73b, 8], [0xc73c, 0xc73c, 7], [0xc73d, 0xc757, 8], [0xc758, 0xc758, 7],
  [0xc759, 0xc773, 8], [0xc774, 0xc774, 7], [0xc775, 0xc78f, 8], [0xc790, 0xc790, 7], [0xc791,
  0xc7ab, 8], [0xc7ac, 0xc7ac, 7], [0xc7ad, 0xc7c7, 8], [0xc7c8, 0xc7c8, 7], [0xc7c9, 0xc7e3, 8],
  [0xc7e4, 0xc7e4, 7], [0xc7e5, 0xc7ff, 8], [0xc800, 0xc800, 7], [0xc801, 0xc81b, 8], [0xc81c,
  0xc81c, 7], [0xc81d, 0xc837, 8], [0xc838, 0xc838, 7], [0xc839, 0xc853, 8], [0xc854, 0xc854, 7],
  [0xc855, 0xc86f, 8], [0xc870, 0xc870, 7], [0xc871, 0xc88b, 8], [0xc88c, 0xc88c, 7], [0xc88d,
  0xc8a7, 8], [0xc8a8, 0xc8a8, 7], [0xc8a9, 0xc8c3, 8], [0xc8c4, 0xc8c4, 7], [0xc8c5, 0xc8df, 8],
  [0xc8e0, 0xc8e0, 7], [0xc8e1, 0xc8fb, 8], [0xc8fc, 0xc8fc, 7], [0xc8fd, 0xc917, 8], [0xc918,
  0xc918, 7], [0xc919, 0xc933, 8], [0xc934, 0xc934, 7], [0xc935, 0xc94f, 8], [0xc950, 0xc950, 7],
  [0xc951, 0xc96b, 8], [0xc96c, 0xc96c, 7], [0xc96d, 0xc987, 8], [0xc988, 0xc988, 7], [0xc989,
  0xc9a3, 8], [0xc9a4, 0xc9a4, 7], [0xc9a5, 0xc9bf, 8], [0xc9c0, 0xc9c0, 7], [0xc9c1, 0xc9db, 8],
  [0xc9dc, 0xc9dc, 7], [0xc9dd, 0xc9f7, 8], [0xc9f8, 0xc9f8, 7], [0xc9f9, 0xca13, 8], [0xca14,
  0xca14, 7], [0xca15, 0xca2f, 8], [0xca30, 0xca30, 7], [0xca31, 0xca4b, 8], [0xca4c, 0xca4c, 7],
  [0xca4d, 0xca67, 8], [0xca68, 0xca68, 7], [0xca69, 0xca83, 8], [0xca84, 0xca84, 7], [0xca85,
  0xca9f, 8], [0xcaa0, 0xcaa0, 7], [0xcaa1, 0xcabb, 8], [0xcabc, 0xcabc, 7], [0xcabd, 0xcad7, 8],
  [0xcad8, 0xcad8, 7], [0xcad9, 0xcaf3, 8], [0xcaf4, 0xcaf4, 7], [0xcaf5, 0xcb0f, 8], [0xcb10,
  0xcb10, 7], [0xcb11, 0xcb2b, 8], [0xcb2c, 0xcb2c, 7], [0xcb2d, 0xcb47, 8], [0xcb48, 0xcb48, 7],
  [0xcb49, 0xcb63, 8], [0xcb64, 0xcb64, 7], [0xcb65, 0xcb7f, 8], [0xcb80, 0xcb80, 7], [0xcb81,
  0xcb9b, 8], [0xcb9c, 0xcb9c, 7], [0xcb9d, 0xcbb7, 8], [0xcbb8, 0xcbb8, 7], [0xcbb9, 0xcbd3, 8],
  [0xcbd4, 0xcbd4, 7], [0xcbd5, 0xcbef, 8], [0xcbf0, 0xcbf0, 7], [0xcbf1, 0xcc0b, 8], [0xcc0c,
  0xcc0c, 7], [0xcc0d, 0xcc27, 8], [0xcc28, 0xcc28, 7], [0xcc29, 0xcc43, 8], [0xcc44, 0xcc44, 7],
  [0xcc45, 0xcc5f, 8], [0xcc60, 0xcc60, 7], [0xcc61, 0xcc7b, 8], [0xcc7c, 0xcc7c, 7], [0xcc7d,
  0xcc97, 8], [0xcc98, 0xcc98, 7], [0xcc99, 0xccb3, 8], [0xccb4, 0xccb4, 7], [0xccb5, 0xcccf, 8],
  [0xccd0, 0xccd0, 7], [0xccd1, 0xcceb, 8], [0xccec, 0xccec, 7], [0xcced, 0xcd07, 8], [0xcd08,
  0xcd08, 7], [0xcd09, 0xcd23, 8], [0xcd24, 0xcd24, 7], [0xcd25, 0xcd3f, 8], [0xcd40, 0xcd40, 7],
  [0xcd41, 0xcd5b, 8], [0xcd5c, 0xcd5c, 7], [0xcd5d, 0xcd77, 8], [0xcd78, 0xcd78, 7], [0xcd79,
  0xcd93, 8], [0xcd94, 0xcd94, 7], [0xcd95, 0xcdaf, 8], [0xcdb0, 0xcdb0, 7], [0xcdb1, 0xcdcb, 8],
  [0xcdcc, 0xcdcc, 7], [0xcdcd, 0xcde7, 8], [0xcde8, 0xcde8, 7], [0xcde9, 0xce03, 8], [0xce04,
  0xce04, 7], [0xce05, 0xce1f, 8], [0xce20, 0xce20, 7], [0xce21, 0xce3b, 8], [0xce3c, 0xce3c, 7],
  [0xce3d, 0xce57, 8], [0xce58, 0xce58, 7], [0xce59, 0xce73, 8], [0xce74, 0xce74, 7], [0xce75,
  0xce8f, 8], [0xce90, 0xce90, 7], [0xce91, 0xceab, 8], [0xceac, 0xceac, 7], [0xcead, 0xcec7, 8],
  [0xcec8, 0xcec8, 7], [0xcec9, 0xcee3, 8], [0xcee4, 0xcee4, 7], [0xcee5, 0xceff, 8], [0xcf00,
  0xcf00, 7], [0xcf01, 0xcf1b, 8], [0xcf1c, 0xcf1c, 7], [0xcf1d, 0xcf37, 8], [0xcf38, 0xcf38, 7],
  [0xcf39, 0xcf53, 8], [0xcf54, 0xcf54, 7], [0xcf55, 0xcf6f, 8], [0xcf70, 0xcf70, 7], [0xcf71,
  0xcf8b, 8], [0xcf8c, 0xcf8c, 7], [0xcf8d, 0xcfa7, 8], [0xcfa8, 0xcfa8, 7], [0xcfa9, 0xcfc3, 8],
  [0xcfc4, 0xcfc4, 7], [0xcfc5, 0xcfdf, 8], [0xcfe0, 0xcfe0, 7], [0xcfe1, 0xcffb, 8], [0xcffc,
  0xcffc, 7], [0xcffd, 0xd017, 8], [0xd018, 0xd018, 7], [0xd019, 0xd033, 8], [0xd034, 0xd034, 7],
  [0xd035, 0xd04f, 8], [0xd050, 0xd050, 7], [0xd051, 0xd06b, 8], [0xd06c, 0xd06c, 7], [0xd06d,
  0xd087, 8], [0xd088, 0xd088, 7], [0xd089, 0xd0a3, 8], [0xd0a4, 0xd0a4, 7], [0xd0a5, 0xd0bf, 8],
  [0xd0c0, 0xd0c0, 7], [0xd0c1, 0xd0db, 8], [0xd0dc, 0xd0dc, 7], [0xd0dd, 0xd0f7, 8], [0xd0f8,
  0xd0f8, 7], [0xd0f9, 0xd113, 8], [0xd114, 0xd114, 7], [0xd115, 0xd12f, 8], [0xd130, 0xd130, 7],
  [0xd131, 0xd14b, 8], [0xd14c, 0xd14c, 7], [0xd14d, 0xd167, 8], [0xd168, 0xd168, 7], [0xd169,
  0xd183, 8], [0xd184, 0xd184, 7], [0xd185, 0xd19f, 8], [0xd1a0, 0xd1a0, 7], [0xd1a1, 0xd1bb, 8],
  [0xd1bc, 0xd1bc, 7], [0xd1bd, 0xd1d7, 8], [0xd1d8, 0xd1d8, 7], [0xd1d9, 0xd1f3, 8], [0xd1f4,
  0xd1f4, 7], [0xd1f5, 0xd20f, 8], [0xd210, 0xd210, 7], [0xd211, 0xd22b, 8], [0xd22c, 0xd22c, 7],
  [0xd22d, 0xd247, 8], [0xd248, 0xd248, 7], [0xd249, 0xd263, 8], [0xd264, 0xd264, 7], [0xd265,
  0xd27f, 8], [0xd280, 0xd280, 7], [0xd281, 0xd29b, 8], [0xd29c, 0xd29c, 7], [0xd29d, 0xd2b7, 8],
  [0xd2b8, 0xd2b8, 7], [0xd2b9, 0xd2d3, 8], [0xd2d4, 0xd2d4, 7], [0xd2d5, 0xd2ef, 8], [0xd2f0,
  0xd2f0, 7], [0xd2f1, 0xd30b, 8], [0xd30c, 0xd30c, 7], [0xd30d, 0xd327, 8], [0xd328, 0xd328, 7],
  [0xd329, 0xd343, 8], [0xd344, 0xd344, 7], [0xd345, 0xd35f, 8], [0xd360, 0xd360, 7], [0xd361,
  0xd37b, 8], [0xd37c, 0xd37c, 7], [0xd37d, 0xd397, 8], [0xd398, 0xd398, 7], [0xd399, 0xd3b3, 8],
  [0xd3b4, 0xd3b4, 7], [0xd3b5, 0xd3cf, 8], [0xd3d0, 0xd3d0, 7], [0xd3d1, 0xd3eb, 8], [0xd3ec,
  0xd3ec, 7], [0xd3ed, 0xd407, 8], [0xd408, 0xd408, 7], [0xd409, 0xd423, 8], [0xd424, 0xd424, 7],
  [0xd425, 0xd43f, 8], [0xd440, 0xd440, 7], [0xd441, 0xd45b, 8], [0xd45c, 0xd45c, 7], [0xd45d,
  0xd477, 8], [0xd478, 0xd478, 7], [0xd479, 0xd493, 8], [0xd494, 0xd494, 7], [0xd495, 0xd4af, 8],
  [0xd4b0, 0xd4b0, 7], [0xd4b1, 0xd4cb, 8], [0xd4cc, 0xd4cc, 7], [0xd4cd, 0xd4e7, 8], [0xd4e8,
  0xd4e8, 7], [0xd4e9, 0xd503, 8], [0xd504, 0xd504, 7], [0xd505, 0xd51f, 8], [0xd520, 0xd520, 7],
  [0xd521, 0xd53b, 8], [0xd53c, 0xd53c, 7], [0xd53d, 0xd557, 8], [0xd558, 0xd558, 7], [0xd559,
  0xd573, 8], [0xd574, 0xd574, 7], [0xd575, 0xd58f, 8], [0xd590, 0xd590, 7], [0xd591, 0xd5ab, 8],
  [0xd5ac, 0xd5ac, 7], [0xd5ad, 0xd5c7, 8], [0xd5c8, 0xd5c8, 7], [0xd5c9, 0xd5e3, 8], [0xd5e4,
  0xd5e4, 7], [0xd5e5, 0xd5ff, 8], [0xd600, 0xd600, 7], [0xd601, 0xd61b, 8], [0xd61c, 0xd61c, 7],
  [0xd61d, 0xd637, 8], [0xd638, 0xd638, 7], [0xd639, 0xd653, 8], [0xd654, 0xd654, 7], [0xd655,
  0xd66f, 8], [0xd670, 0xd670, 7], [0xd671, 0xd68b, 8], [0xd68c, 0xd68c, 7], [0xd68d, 0xd6a7, 8],
  [0xd6a8, 0xd6a8, 7], [0xd6a9, 0xd6c3, 8], [0xd6c4, 0xd6c4, 7], [0xd6c5, 0xd6df, 8], [0xd6e0,
  0xd6e0, 7], [0xd6e1, 0xd6fb, 8], [0xd6fc, 0xd6fc, 7], [0xd6fd, 0xd717, 8], [0xd718, 0xd718, 7],
  [0xd719, 0xd733, 8], [0xd734, 0xd734, 7], [0xd735, 0xd74f, 8], [0xd750, 0xd750, 7], [0xd751,
  0xd76b, 8], [0xd76c, 0xd76c, 7], [0xd76d, 0xd787, 8], [0xd788, 0xd788, 7], [0xd789, 0xd7a3, 8],
  [0xd7b0, 0xd7c6, 13], [0xd7cb, 0xd7fb, 12], [0xfb1e, 0xfb1e, 3], [0xfe00, 0xfe0f, 3], [0xfe20,
  0xfe2f, 3], [0xfeff, 0xfeff, 2], [0xff9e, 0xff9f, 3], [0xfff0, 0xfffb, 2], [0x101fd, 0x101fd, 3],
  [0x102e0, 0x102e0, 3], [0x10376, 0x1037a, 3], [0x10a01, 0x10a03, 3], [0x10a05, 0x10a06, 3],
  [0x10a0c, 0x10a0f, 3], [0x10a38, 0x10a3a, 3], [0x10a3f, 0x10a3f, 3], [0x10ae5, 0x10ae6, 3],
  [0x10d24, 0x10d27, 3], [0x10eab, 0x10eac, 3], [0x10efd, 0x10eff, 3], [0x10f46, 0x10f50, 3],
  [0x10f82, 0x10f85, 3], [0x11000, 0x11000, 11], [0x11001, 0x11001, 3], [0x11002, 0x11002, 11],
  [0x11038, 0x11046, 3], [0x11070, 0x11070, 3], [0x11073, 0x11074, 3], [0x1107f, 0x11081, 3],
  [0x11082, 0x11082, 11], [0x110b0, 0x110b2, 11], [0x110b3, 0x110b6, 3], [0x110b7, 0x110b8, 11],
  [0x110b9, 0x110ba, 3], [0x110bd, 0x110bd, 9], [0x110c2, 0x110c2, 3], [0x110cd, 0x110cd, 9],
  [0x11100, 0x11102, 3], [0x11127, 0x1112b, 3], [0x1112c, 0x1112c, 11], [0x1112d, 0x11134, 3],
  [0x11145, 0x11146, 11], [0x11173, 0x11173, 3], [0x11180, 0x11181, 3], [0x11182, 0x11182, 11],
  [0x111b3, 0x111b5, 11], [0x111b6, 0x111be, 3], [0x111bf, 0x111c0, 11], [0x111c2, 0x111c3, 9],
  [0x111c9, 0x111cc, 3], [0x111ce, 0x111ce, 11], [0x111cf, 0x111cf, 3], [0x1122c, 0x1122e, 11],
  [0x1122f, 0x11231, 3], [0x11232, 0x11233, 11], [0x11234, 0x11234, 3], [0x11235, 0x11235, 11],
  [0x11236, 0x11237, 3], [0x1123e, 0x1123e, 3], [0x11241, 0x11241, 3], [0x112df, 0x112df, 3],
  [0x112e0, 0x112e2, 11], [0x112e3, 0x112ea, 3], [0x11300, 0x11301, 3], [0x11302, 0x11303, 11],
  [0x1133b, 0x1133c, 3], [0x1133e, 0x1133e, 3], [0x1133f, 0x1133f, 11], [0x11340, 0x11340, 3],
  [0x11341, 0x11344, 11], [0x11347, 0x11348, 11], [0x1134b, 0x1134d, 11], [0x11357, 0x11357, 3],
  [0x11362, 0x11363, 11], [0x11366, 0x1136c, 3], [0x11370, 0x11374, 3], [0x11435, 0x11437, 11],
  [0x11438, 0x1143f, 3], [0x11440, 0x11441, 11], [0x11442, 0x11444, 3], [0x11445, 0x11445, 11],
  [0x11446, 0x11446, 3], [0x1145e, 0x1145e, 3], [0x114b0, 0x114b0, 3], [0x114b1, 0x114b2, 11],
  [0x114b3, 0x114b8, 3], [0x114b9, 0x114b9, 11], [0x114ba, 0x114ba, 3], [0x114bb, 0x114bc, 11],
  [0x114bd, 0x114bd, 3], [0x114be, 0x114be, 11], [0x114bf, 0x114c0, 3], [0x114c1, 0x114c1, 11],
  [0x114c2, 0x114c3, 3], [0x115af, 0x115af, 3], [0x115b0, 0x115b1, 11], [0x115b2, 0x115b5, 3],
  [0x115b8, 0x115bb, 11], [0x115bc, 0x115bd, 3], [0x115be, 0x115be, 11], [0x115bf, 0x115c0, 3],
  [0x115dc, 0x115dd, 3], [0x11630, 0x11632, 11], [0x11633, 0x1163a, 3], [0x1163b, 0x1163c, 11],
  [0x1163d, 0x1163d, 3], [0x1163e, 0x1163e, 11], [0x1163f, 0x11640, 3], [0x116ab, 0x116ab, 3],
  [0x116ac, 0x116ac, 11], [0x116ad, 0x116ad, 3], [0x116ae, 0x116af, 11], [0x116b0, 0x116b5, 3],
  [0x116b6, 0x116b6, 11], [0x116b7, 0x116b7, 3], [0x1171d, 0x1171f, 3], [0x11722, 0x11725, 3],
  [0x11726, 0x11726, 11], [0x11727, 0x1172b, 3], [0x1182c, 0x1182e, 11], [0x1182f, 0x11837, 3],
  [0x11838, 0x11838, 11], [0x11839, 0x1183a, 3], [0x11930, 0x11930, 3], [0x11931, 0x11935, 11],
  [0x11937, 0x11938, 11], [0x1193b, 0x1193c, 3], [0x1193d, 0x1193d, 11], [0x1193e, 0x1193e, 3],
  [0x1193f, 0x1193f, 9], [0x11940, 0x11940, 11], [0x11941, 0x11941, 9], [0x11942, 0x11942, 11],
  [0x11943, 0x11943, 3], [0x119d1, 0x119d3, 11], [0x119d4, 0x119d7, 3], [0x119da, 0x119db, 3],
  [0x119dc, 0x119df, 11], [0x119e0, 0x119e0, 3], [0x119e4, 0x119e4, 11], [0x11a01, 0x11a0a, 3],
  [0x11a33, 0x11a38, 3], [0x11a39, 0x11a39, 11], [0x11a3a, 0x11a3a, 9], [0x11a3b, 0x11a3e, 3],
  [0x11a47, 0x11a47, 3], [0x11a51, 0x11a56, 3], [0x11a57, 0x11a58, 11], [0x11a59, 0x11a5b, 3],
  [0x11a84, 0x11a89, 9], [0x11a8a, 0x11a96, 3], [0x11a97, 0x11a97, 11], [0x11a98, 0x11a99, 3],
  [0x11c2f, 0x11c2f, 11], [0x11c30, 0x11c36, 3], [0x11c38, 0x11c3d, 3], [0x11c3e, 0x11c3e, 11],
  [0x11c3f, 0x11c3f, 3], [0x11c92, 0x11ca7, 3], [0x11ca9, 0x11ca9, 11], [0x11caa, 0x11cb0, 3],
  [0x11cb1, 0x11cb1, 11], [0x11cb2, 0x11cb3, 3], [0x11cb4, 0x11cb4, 11], [0x11cb5, 0x11cb6, 3],
  [0x11d31, 0x11d36, 3], [0x11d3a, 0x11d3a, 3], [0x11d3c, 0x11d3d, 3], [0x11d3f, 0x11d45, 3],
  [0x11d46, 0x11d46, 9], [0x11d47, 0x11d47, 3], [0x11d8a, 0x11d8e, 11], [0x11d90, 0x11d91, 3],
  [0x11d93, 0x11d94, 11], [0x11d95, 0x11d95, 3], [0x11d96, 0x11d96, 11], [0x11d97, 0x11d97, 3],
  [0x11ef3, 0x11ef4, 3], [0x11ef5, 0x11ef6, 11], [0x11f00, 0x11f01, 3], [0x11f02, 0x11f02, 9],
  [0x11f03, 0x11f03, 11], [0x11f34, 0x11f35, 11], [0x11f36, 0x11f3a, 3], [0x11f3e, 0x11f3f, 11],
  [0x11f40, 0x11f40, 3], [0x11f41, 0x11f41, 11], [0x11f42, 0x11f42, 3], [0x13430, 0x1343f, 2],
  [0x13440, 0x13440, 3], [0x13447, 0x13455, 3], [0x16af0, 0x16af4, 3], [0x16b30, 0x16b36, 3],
  [0x16f4f, 0x16f4f, 3], [0x16f51, 0x16f87, 11], [0x16f8f, 0x16f92, 3], [0x16fe4, 0x16fe4, 3],
  [0x16ff0, 0x16ff1, 11], [0x1bc9d, 0x1bc9e, 3], [0x1bca0, 0x1bca3, 2], [0x1cf00, 0x1cf2d, 3],
  [0x1cf30, 0x1cf46, 3], [0x1d165, 0x1d165, 3], [0x1d166, 0x1d166, 11], [0x1d167, 0x1d169, 3],
  [0x1d16d, 0x1d16d, 11], [0x1d16e, 0x1d172, 3], [0x1d173, 0x1d17a, 2], [0x1d17b, 0x1d182, 3],
  [0x1d185, 0x1d18b, 3], [0x1d1aa, 0x1d1ad, 3], [0x1d242, 0x1d244, 3], [0x1da00, 0x1da36, 3],
  [0x1da3b, 0x1da6c, 3], [0x1da75, 0x1da75, 3], [0x1da84, 0x1da84, 3], [0x1da9b, 0x1da9f, 3],
  [0x1daa1, 0x1daaf, 3], [0x1e000, 0x1e006, 3], [0x1e008, 0x1e018, 3], [0x1e01b, 0x1e021, 3],
  [0x1e023, 0x1e024, 3], [0x1e026, 0x1e02a, 3], [0x1e08f, 0x1e08f, 3], [0x1e130, 0x1e136, 3],
  [0x1e2ae, 0x1e2ae, 3], [0x1e2ec, 0x1e2ef, 3], [0x1e4ec, 0x1e4ef, 3], [0x1e8d0, 0x1e8d6, 3],
  [0x1e944, 0x1e94a, 3], [0x1f000, 0x1f0ff, 4], [0x1f10d, 0x1f10f, 4], [0x1f12f, 0x1f12f, 4],
  [0x1f16c, 0x1f171, 4], [0x1f17e, 0x1f17f, 4], [0x1f18e, 0x1f18e, 4], [0x1f191, 0x1f19a, 4],
  [0x1f1ad, 0x1f1e5, 4], [0x1f1e6, 0x1f1ff, 10], [0x1f201, 0x1f20f, 4], [0x1f21a, 0x1f21a, 4],
  [0x1f22f, 0x1f22f, 4], [0x1f232, 0x1f23a, 4], [0x1f23c, 0x1f23f, 4], [0x1f249, 0x1f3fa, 4],
  [0x1f3fb, 0x1f3ff, 3], [0x1f400, 0x1f53d, 4], [0x1f546, 0x1f64f, 4], [0x1f680, 0x1f6ff, 4],
  [0x1f774, 0x1f77f, 4], [0x1f7d5, 0x1f7ff, 4], [0x1f80c, 0x1f80f, 4], [0x1f848, 0x1f84f, 4],
  [0x1f85a, 0x1f85f, 4], [0x1f888, 0x1f88f, 4], [0x1f8ae, 0x1f8ff, 4], [0x1f90c, 0x1f93a, 4],
  [0x1f93c, 0x1f945, 4], [0x1f947, 0x1faff, 4], [0x1fc00, 0x1fffd, 4], [0xe0000, 0xe001f, 2],
  [0xe0020, 0xe007f, 3], [0xe0080, 0xe00ff, 2], [0xe0100, 0xe01ef, 3], [0xe01f0, 0xe0fff, 2],
];

/**
 * @param {number} cp
 * @return {GraphemeSearchResult}
 */
export function searchGrapheme(cp) {
  // Perform a quick O(1) lookup in a precomputed table to determine
  // the slice of the range table to search in.
  let lookup_table = grapheme_cat_lookup;
  let lookup_interval = 0x80;

  let idx = cp / lookup_interval | 0;
  // If the `idx` is outside of the precomputed table - use the slice
  // starting from the last covered index in the precomputed table and
  // ending with the length of the range table.
  let sliceFrom = 1443, sliceTo = 1449;
  if (idx + 1 < lookup_table.length) {
    sliceFrom = lookup_table[idx];
    sliceTo = lookup_table[idx + 1] + 1;
  }

  // Compute pessimistic default lower and upper bounds on the category.
  // If character doesn't map to any range and there is no adjacent range
  // in the table slice - these bounds has to apply.
  let lower = idx * lookup_interval;
  let upper = lower + lookup_interval - 1;
  return bsearchUnicodeRange(cp, grapheme_cat_table, lower, upper, sliceFrom, sliceTo);
}
